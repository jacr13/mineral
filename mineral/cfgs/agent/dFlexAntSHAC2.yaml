seed: ${..seed}
algo: SHAC

print_every: 1
ckpt_every: 100

network:
  normalize_input: True
  encoder: null

  actor: Actor
  actor_kwargs:
    mlp_kwargs:
      units: [512, 256, 128]
      norm_type: LayerNorm
      act_type: SiLU
    # dist_kwargs: {dist_type: squashed_normal, validate_args: False}
    dist_kwargs: {dist_type: dreamerv3_squashed_normal, minstd: 0.1, maxstd: 1.0}
    fixed_sigma: False
  #   dist_kwargs: {dist_type: dreamerv3_normal, minstd: 0.1, maxstd: 1.0, validate_args: False}
  #   fixed_sigma: False
  # tanh_clamp: True

  critic: EnsembleCritic
  critic_kwargs:
    n_critics: 2
    mlp_kwargs:
      units: [512, 256, 128]
      norm_type: LayerNorm
      act_type: SiLU

shac:
  multi_gpu: ${...multi_gpu}
  num_actors: ${...task.env.numEnvs}

  reward_shaper:
    fn: scale
    scale: 1.0

  max_epochs: 2000
  max_agent_steps: 5e6
  horizon_len: 32
  num_critic_batches: 4

  gamma: 0.99
  critic_method: td-lambda  # td-lambda | one-step
  lambda: 0.95
  critic_iterations: 16
  normalize_ret: False

  optim_type: AdamW
  actor_optim_kwargs: {lr: 5e-4, betas: [0.7, 0.95]}
  critic_optim_kwargs: {lr: 5e-4, betas: [0.7, 0.95]}
  no_target_critic: True
  lr_schedule: constant  # linear | constant
  # lr_schedule: kl
  # kl_threshold: 0.008
  normalize_value: True
  actor_loss_normval: True
  max_grad_norm: 1.0
  truncate_grads: True
